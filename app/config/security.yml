# app/config/security.yml
security:
    encoders:
        FOS\UserBundle\Model\UserInterface:
            algorithm: sha1
            encode_as_base64: true
            iterations: 1

    role_hierarchy:
        ROLE_EXPERT:      [ROLE_EXPERT, ROLE_GROSSMEISER, ROLE_READER, ROLE_USER]
        ROLE_ADMIN:       [ROLE_ADMIN, ROLE_EXPERT, ROLE_GROSSMEISER, ROLE_READER, ROLE_USER]
        ROLE_SUPER_ADMIN: [ROLE_SUPER_ADMIN, ROLE_EXPERT, ROLE_GROSSMEISER, ROLE_READER, ROLE_ADMIN]

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username_email

    firewalls:
            dev:
                pattern:  ^/(_(profiler|wdt)|css|images|js)/
                security: false
            token:
                pattern:  ^/api/*.+tokens.*
                context:      user
                anonymous:    true
            wsse_secured:
                pattern:   ^/api/.*
                anonymous : true
                wsse:
                    lifetime: %token_lifetime%
                    provider: fos_userbundle
                    realm: "Secured with WSSE" #identifies the set of resources to which the authentication information will apply (WWW-Authenticate)
                    profile: "UsernameToken" #WSSE profile (WWW-Authenticate)
                    encoder: #digest algorithm
                        algorithm: sha1
                        encodeHashAsBase64: true
                        iterations: 1
            secured_area:
                logout:    true
                anonymous: true
                oauth:
                    resource_owners:
                        facebook:     "/login/check-facebook"
                        vkontakte:    "/login/check-vkontakte"
                    login_path:        /login
                    use_forward:       false
                    failure_path:      /login
                    oauth_user_provider:
                        service: library_user_provider
                    default_target_path: /oauth/bridge

    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/connect, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/oauth/bridge, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/v1/time, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/v1/oauths/tokens, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/v1/users/.*/salt, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/v1/tokens, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/v1/registers, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/v1/time, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }
        - { path: ^/api/v1/, role: ROLE_READER }
